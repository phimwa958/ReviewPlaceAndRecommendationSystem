# Generated by Django 5.2.5 on 2025-08-13 16:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_phone', models.CharField(max_length=15, unique=True, verbose_name='เบอร์มือถือ')),
                ('gender', models.CharField(choices=[('male', 'ชาย'), ('female', 'หญิง'), ('other', 'อื่นๆ')], default='other', max_length=6, verbose_name='เพศ')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='วันเกิด')),
                ('profile_image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='profile_pics/', verbose_name='รูปโปรไฟล์')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='ข้อความ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='วันที่สร้าง')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='วันที่แก้ไข')),
                ('status', models.CharField(choices=[('published', 'เผยแพร่'), ('deleted', 'ลบแล้ว')], default='published', max_length=10, verbose_name='สถานะ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=255, verbose_name='ชื่อสถานที่')),
                ('category', models.CharField(choices=[('accommodation', 'ที่พัก'), ('attraction', 'สถานที่ท่องเที่ยว'), ('restaurant', 'ร้านอาหาร')], max_length=50, verbose_name='หมวดหมู่')),
                ('location', models.TextField(verbose_name='ที่ตั้ง')),
                ('description', models.TextField(blank=True, null=True, verbose_name='รายละเอียด')),
                ('average_rating', models.FloatField(default=0, verbose_name='คะแนนเฉลี่ย')),
                ('total_reviews', models.IntegerField(default=0, verbose_name='จำนวนรีวิว')),
                ('contact_info', models.TextField(blank=True, null=True, verbose_name='ข้อมูลติดต่อ')),
                ('price_range', models.CharField(blank=True, max_length=50, null=True, verbose_name='ช่วงราคา')),
                ('open_hours', models.CharField(blank=True, max_length=255, null=True, verbose_name='เวลาทำการ')),
                ('visit_count', models.IntegerField(default=0, verbose_name='จำนวนการเข้าชม')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='วันที่สร้าง')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='วันที่แก้ไขล่าสุด')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='เจ้าของ')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='places/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='review_place.place')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(verbose_name='ข้อความรีวิว')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='คะแนน')),
                ('review_date', models.DateTimeField(auto_now_add=True, verbose_name='วันที่รีวิว')),
                ('status', models.CharField(choices=[('published', 'เผยแพร่'), ('deleted', 'ลบแล้ว')], default='published', max_length=10, verbose_name='สถานะ')),
                ('helpful_count', models.IntegerField(default=0, verbose_name='จำนวนคนที่ช่วยเหลือ')),
                ('report_count', models.IntegerField(default=0, verbose_name='จำนวนรายงาน')),
                ('visit_count', models.IntegerField(default=0, verbose_name='จำนวนการเข้าชม')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='review_place.place', verbose_name='สถานที่')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('place', 'สถานที่'), ('review', 'รีวิว'), ('comment', 'ความคิดเห็น')], max_length=10, verbose_name='ประเภทรายงาน')),
                ('reason', models.TextField(verbose_name='เหตุผล')),
                ('reported_at', models.DateTimeField(auto_now_add=True, verbose_name='วันที่รายงาน')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review_place.comment', verbose_name='ความคิดเห็น')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review_place.place', verbose_name='สถานที่')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='รายงานโดย')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review_place.review', verbose_name='รีวิว')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='review_place.review', verbose_name='รีวิว'),
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='reviews/')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='review_place.review')),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('view', 'View'), ('share', 'Share'), ('search', 'Search'), ('click', 'Click')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PlaceLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='review_place.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'place')},
            },
        ),
    ]
